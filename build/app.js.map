{"version":3,"sources":["../src/app.js"],"names":["require","config","path","process","env","NODE_ENV","app","use","bodyParser","urlencoded","extended","json","req","res","next","header","PORT","routes","add","get","send","main","module","listen","console","log"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AAGA;;;;;;AAEA;AACA;AACAA,QAAQ,QAAR,EAAkBC,MAAlB,CAAyB,EAAEC,qBAAmBC,QAAQC,GAAR,CAAYC,QAA/B,SAAF,EAAzB;;AALA;;;AAOA,IAAMC,MAAM,wBAAZ;;AAEA;AACA,IAAIH,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CC,MAAIC,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACD;;AAED;AACAD,IAAIC,GAAJ,CAAQC,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;AACAJ,IAAIC,GAAJ,CAAQC,qBAAWG,IAAX,EAAR;;AAEA;AACAL,IAAIC,GAAJ,CAAQ,UAACK,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1BD,MAAIE,MAAJ,CAAW,6BAAX,wBAA8DZ,QAAQC,GAAR,CAAYY,IAA1E;AACAH,MAAIE,MAAJ,CAAW,kCAAX,EAA+C,MAA/C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,uDAA3C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,wBAA3C;AACAD;AACD,CAND;;AAQA;AACA;AACAR,IAAIC,GAAJ,CAAQ,UAAR,EAAoBU,gBAAOC,GAA3B;;AAEAZ,IAAIa,GAAJ,CAAQ,GAAR,EAAa,UAACP,GAAD,EAAMC,GAAN;AAAA,SAAcA,IAAIO,IAAJ,CAAS,yCAAT,CAAd;AAAA,CAAb;;AAEA;AACA;AACA;AACA,IAAIpB,QAAQqB,IAAR,KAAiBC,MAArB,EAA6B;AAC3BhB,MAAIiB,MAAJ,CAAWpB,QAAQC,GAAR,CAAYY,IAAvB,EAA6B,YAAM;AACjC;AACAQ,YAAQC,GAAR,iCAA0CtB,QAAQC,GAAR,CAAYY,IAAtD;AACD,GAHD;AAID;;kBAEcV,G","file":"app.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport morgan from 'morgan';\n\n// import the routes\nimport routes from './routes/index';\n\n// use the correct variables depending on the node evnviroment\n// NODE_ENV is set in package.json scripts\nrequire('dotenv').config({ path: `variables.${process.env.NODE_ENV}.env` });\n\nconst app = express();\n\n// only show logs during development\nif (process.env.NODE_ENV === 'development') {\n  app.use(morgan('dev'));\n}\n\n// add the body parser to Express middleware\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\n\n// allow CORS\napp.use((req, res, next) => {\n  res.header('Access-Control-Allow-Origin', `http://localhost:${process.env.PORT}`);\n  res.header('Access-Control-Allow-Credentials', 'true');\n  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, token');\n  res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE');\n  next();\n});\n\n// setup routes, see each file inside the ./routes\n// directory for more information\napp.use('/api/add', routes.add);\n\napp.get('*', (req, res) => res.send('Nothing here, API is at: \\n ðŸ‘‰ /api/add'));\n\n// Only listen for connections when the server is\n// called directly from node. This avoids listening\n// for connections when running tests.\nif (require.main === module) {\n  app.listen(process.env.PORT, () => {\n    // eslint-disable-next-line no-console\n    console.log(`Server on http://localhost:${process.env.PORT}`);\n  });\n}\n\nexport default app;\n"]}